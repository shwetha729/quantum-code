{"cells":[{"cell_type":"markdown","id":"d2497f68-e565-4dec-8d5e-ec337e37128e","metadata":{"id":"d2497f68-e565-4dec-8d5e-ec337e37128e"},"source":["<div style=\"text-align: center; margin: 50px\">\n","\n","<h1 style=\"text-align: center;\">Qubit by Qubit</h1>\n","<h2 style=\"text-align: center;\">Introduction to Quantum Computing</h1>\n","<h3>Creating Quantum Circuits</h3>\n","<h3>Lab notebook</h3>\n","\n","</div>"]},{"cell_type":"code","execution_count":null,"id":"863aa459-349d-43be-b305-f1ca757b4858","metadata":{"id":"863aa459-349d-43be-b305-f1ca757b4858"},"outputs":[],"source":["# [Setup block 1] Imports\n","import qsharp.azure\n","from matplotlib import pyplot"]},{"cell_type":"code","source":["# [Setup block 2] Connect to Azure Quantum Workspace\n","targets = qsharp.azure.connect(\n","    # replace these!\n","    resourceId=\"/subscriptions/de1c1e38-98cd-48df-a084-7a3e8e09c062/resourceGroups/AzureQuantum/providers/Microsoft.Quantum/Workspaces/QubitTest\",\n","    location=\"eastus\")"],"metadata":{"id":"JCjuf8FfK0-i"},"id":"JCjuf8FfK0-i","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# [Setup block 3] See what targets are available for submission\n","import qsharp\n","\n","print(\"This workspace's targets:\")\n","for target in targets:\n","    print(\"-\", target.id)"],"metadata":{"id":"KYjuytYEXsaO"},"id":"KYjuytYEXsaO","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# [Setup block 4] We declare the function we will define in Q# as a callable so that Python recognizes the symbol.\n","FlipBit: any = None\n","GenerateRandomBit: any = None\n","XThenH: any = None\n","TwoX: any = None"],"metadata":{"id":"DgS0I7THYChF"},"id":"DgS0I7THYChF","execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%qsharp\n","// [Setup block 5]\n","open Microsoft.Quantum.Measurement;\n","open Microsoft.Quantum.Arrays;\n","open Microsoft.Quantum.Convert;"],"metadata":{"id":"auSs5eFGxRBY"},"id":"auSs5eFGxRBY","execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"id":"8960aede-1965-4905-92ba-4ee36f22855f","metadata":{"id":"8960aede-1965-4905-92ba-4ee36f22855f"},"outputs":[],"source":["%%qsharp\n","// Block 1\n","operation FlipBit() : Result {\n","    // Step 1: Allocate a single qubit and call it q\n","    use q = Qubit();\n","    // Step 2: Add an X gate to your quantum circuit using X(q)\n","    X(q);\n","    // Step 3: Measure the qubit using M(q) and return the measurement \n","    return M(q);\n","}"]},{"cell_type":"code","execution_count":null,"id":"cd12c286-8bb3-4277-b79f-75447b86cbb5","metadata":{"id":"cd12c286-8bb3-4277-b79f-75447b86cbb5"},"outputs":[],"source":["%%qsharp\n","// Block 2 - Try the H gate\n","operation GenerateRandomBit() : Result {\n","    // Step 1: Allocate a single qubit q\n","    use q = Qubit();\n","    // Step 2: Add an H gate to your quantum circuit\n","    H(q);\n","    // Step 3: Measure the qubit and return the measurement\n","    return M(q);\n","}"]},{"cell_type":"code","execution_count":null,"id":"e0b6ebc0-237d-4661-8acd-f87312e5c3aa","metadata":{"id":"e0b6ebc0-237d-4661-8acd-f87312e5c3aa"},"outputs":[],"source":["# Block 3 - Run your circuit\n","target = \"ionq.simulator\" # change this to what your instructor tells you to\n","qsharp.azure.target(target)\n","\n","# We'll use 100 shots (simulated runs)\n","result = qsharp.azure.execute(FlipBit, shots=100, jobName=\"Generate one random bit\", timeout=240)"]},{"cell_type":"code","source":["# Block 4 - Visualize results\n","pyplot.bar(result.keys(), result.values())\n","pyplot.title(\"Result\")\n","pyplot.xlabel(\"Measurement\")\n","pyplot.ylabel(\"Probability\")\n","\n","pyplot.show()"],"metadata":{"id":"rZ2yQqR5KsJt"},"id":"rZ2yQqR5KsJt","execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%qsharp\n","// Block 5 - Write an operation XThenH that allocates a qubit, applies the X gate and then the H gate to it, \n","// and returns its measurement at the end.\n","operation XThenH() : Result {\n","    use q = Qubit();\n","    X(q);\n","    H(q);\n","    return M(q);\n","}"],"metadata":{"id":"SabUdyFhQlH_"},"id":"SabUdyFhQlH_","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Block 6 - Set up and run the circuit using the simulator your TA tells you to use and visualize it \n","# (feel free to reuse the code from blocks 3 and 4!)\n","target = \"ionq.simulator\" # change this to what your instructor tells you to\n","qsharp.azure.target(target)\n","\n","# We'll use 100 shots (simulated runs)\n","result = qsharp.azure.execute(TwoX, shots=100, timeout=240)\n","\n","pyplot.bar(result.keys(), result.values())\n","pyplot.title(\"Result\")\n","pyplot.xlabel(\"Measurement\")\n","pyplot.ylabel(\"Probability\")\n","\n","pyplot.show()"],"metadata":{"id":"3uP_RbxYQ07L"},"id":"3uP_RbxYQ07L","execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%qsharp\n","// Block 7: Write an operation TwoX that allocates a qubit, applies the X gate twice, and returns its measurement at the end.\n","operation TwoX() : Result {\n","    use q = Qubit();\n","    X(q);\n","    X(q);\n","    return M(q);\n","}"],"metadata":{"id":"cbxsSqgxQphx"},"id":"cbxsSqgxQphx","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Q# Challenge exercise 1 - The Z gate\n","# In lecture we discussed the X and H gates. Another fundamental quantum gate is the Z gate.\n","# Create a quantum circuit  with an H gate followed by a Z gate. Can you guess what the code for adding a Z gate would be?\n","# Simulate this circuit\n","# What can you say about the action of the Z gate? Is it also a rotation? About which axis of the Bloch sphere?"],"metadata":{"id":"fudoZI2GkI_G"},"id":"fudoZI2GkI_G","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Q# Challenge exercise 2 - Ordering of gates\n","# In this exercise, we will explore whether the ordering of gates in a circuit is important or not\n","# Create a quantum circuit with a Z gate followed by an H gate. Note that the order of gates in this circuit is the reverse of the circuit from Challenge 1\n","# Simulate this circuit\n","# Is the final state of the circuit the same as that for the circuit in challenge 1? "],"metadata":{"id":"tzqwatTKkU9O"},"id":"tzqwatTKkU9O","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Qiskit v0.33.1 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"colab":{"provenance":[{"file_id":"10W_LUprjwKt009E97M8B6EcQLlvrMiaJ","timestamp":1673650798619}]}},"nbformat":4,"nbformat_minor":5}